name: Manage Pull Request

on:
  # push:
  #   branches:
  #     - master
  pull_request:
    types:
      - opened
      - labeled
      - unlabeled
      - synchronize

jobs:
  enforce_conformity:
    name: Use Conform to enforce build pipeline policies
    runs-on: ubuntu-latest

    steps:
      - name: Run Conform enforcer action
        uses: talos-systems/conform@v0.1.0-alpha.19

  check_semver_labels:
    name: Check PR for required semantic versioning labels
    runs-on: ubuntu-latest

    steps:
      - name: Require semantic versioning labels
        uses: mheap/github-action-required-labels@v1
        with:
          mode: exactly
          count: 1
          labels: "semver:breaking, semver:feature, semver:patch, chore, ci"

  check_conventional_labels:
    name: Check PR for required conventional commits labels
    runs-on: ubuntu-latest

    steps:
      - name: Require conventional commit labels
        uses: mheap/github-action-required-labels@v1
        with:
          mode: minimum
          count: 1
          labels: "chore, ci, docs, feat, fix, perf, refactor, revert, style, test"

  check_blocker_labels:
    name: Check PR for merge-blocking labels
    runs-on: ubuntu-latest

    steps:
      - name: Prohibit WIP labels
        uses: mheap/github-action-required-labels@v1
        with:
          mode: exactly
          count: 0
          labels: "WIP"
      - name: Prohibit merge-blocking labels
        uses: mheap/github-action-required-labels@v1
        with:
          mode: exactly
          count: 0
          labels: "wontmerge, wontfix, duplicate"

  # draft_release:
  #   name: Draft new release
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Set up Go 1.x
  #       uses: actions/setup-go@v2
  #       with:
  #         go-version: ^1.13
  #       id: go

  #     - name: Check out code into the Go module directory
  #       uses: actions/checkout@v2

  #     - name: Get module dependencies
  #       run: go mod download

  #     - name: Build plugin from source
  #       run: |
  #         mkdir .build
  #         go build -o .build/packer-builder-arm -v

      # - uses: "marvinpinto/action-automatic-releases@latest"
      #   with:
      #     repo_token: "${{ secrets.GITHUB_TOKEN }}"
      #     automatic_release_tag: "latest"
      #     prerelease: true
      #     draft: true
      #     title: "Development Build"
      #     files: |
      #       .build/*
      #       LICENSE
