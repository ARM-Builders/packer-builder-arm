name: Draft a new release

on:
  push:
    branches:
      - master

jobs:
  draft_release:
    name: Update the next release draft for the project
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the project into the local workspace
        uses: actions/checkout@v2

      # Create a new release draft using the GitHub releases feature.
      # Include release notes that correspond to the contents of the
      # changelog for this release.
      # Action: https://github.com/release-drafter/release-drafter
      - name: Draft a new GitHub release with release notes
        id: github_release
        uses: release-drafter/release-drafter@v5
        with:
          config-name: release-drafter.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Create a changelog for the recent versions of the project
      # using the github_changelog_generator tool. This requires first
      # installing Ruby in the environment. The changelog generator is
      # run using the script and config in generate_changelog.sh
      # Software: https://github.com/github-changelog-generator/github-changelog-generator
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.6
      - name: Install github_changelog_generator
        run: gem install github_changelog_generator
      - name: Run changelog generator
        id: generate_changelog
        run: |
          .github/scripts/generate_changelog.sh

          echo "Generated changelog:"
          cat CHANGELOG.md
        env:
          TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NEXT_TAG: ${{ steps.github_release.outputs.tag_name }}
      
      # Commit the newly-generated changelog to the repository as a
      # standalone commit.
      # Action: https://github.com/marketplace/actions/add-commit
      - name: Commit the update to the changelog
        uses: EndBug/add-and-commit@v4
        with:
          add: "CHANGELOG.md"
          message: "chore: update changelog for ${{ env.NEXT_TAG }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NEXT_TAG: ${{ steps.github_release.outputs.tag_name }}

  # tag_release:
  #   name: Tag a new release
  #   runs-on: ubuntu-latest

  #   steps:
      # Don't generate a new release if PR still has WIP label
      # - name: Prohibit WIP labels
      #   uses: mheap/github-action-required-labels@v1
      #   with:
      #     mode: exactly
      #     count: 0
      #     labels: "WIP"

      # Don't generate a new release if PR was closed with a
      # wontmerge, wontfix, or duplicate label
      # - name: Prohibit merge-blocking labels
      #   uses: mheap/github-action-required-labels@v1
      #   with:
      #     mode: exactly
      #     count: 0
      #     labels: "wontmerge, wontfix, duplicate"

      # # Action for generating tag release can be found at
      # # https://github.com/marketplace/actions/semver-release
      # - name: Generate release tag
      #   id: semver
      #   uses: K-Phoen/semver-release-action@master
      #   with:
      #     release_branch: master
      #     release_strategy: none
      #     tag_format: "v%semver:breaking%.%semver:feature%.%semver:patch%"
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
